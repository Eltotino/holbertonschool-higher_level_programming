=======================
2-matrix_divided.py
=======================
''matrix_divided'' module
----------------------------------------------------------
Import matrix_divided from 2-matrix_divided

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

	>>> m = __import__("2-matrix_divided").__doc__
	>>> len(m) > 1
	True


	>>> matrix_divided([[6, 6], [6, 6]], float('inf'))
	[[0.0, 0.0], [0.0, 0.0]]


	>>> f = __import__("2-matrix_divided").matrix_divided.__doc__
    >>> len(f) > 1
    True


	>>> matrix_divided([[1, 2, 3], [1, 3]], 2)
	Traceback (most recent call last):
  	...
	TypeError: Each row of the matrix must have the same size



	>>> matrix_divided([[6, 6], [6, 6]], 0)
	Traceback (most recent call last):
  	...
	ZeroDivisionError: division by zero


	>>> matrix_divided([[6, 6], [6, 6]], "55")
	Traceback (most recent call last):
  	...
	TypeError: div must be a number


	>>> matrix_divided("string", 2)
	Traceback (most recent call last):
  	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats



	>>> matrix_divided()
	Traceback (most recent call last):
  	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


	>>> matrix_divided([[6, 6], [6, 6]])
	Traceback (most recent call last):
  	...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
