The ``matrix_mul`` module
===============================================================================

Using ``matrix_mul``
-------------------------------------------------------------------------------


    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul


    >>> m_a = "matrix_a"
    >>> m_b = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list


    >>> m_b = "matrix_b"
    >>> m_a = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list


    >>> m_a = "matrix_a"
    >>> m_b = "matrix_b"
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list


    >>> m_a = [[1, 3, 4], 1]
    >>> m_b = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists


    >>> m_b = [[1, 3, 4], 1]
    >>> m_a = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists


    >>> m_a = []
    >>> m_b = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty


    >>> m_b = []
    >>> m_a = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty


    >>> m_a = [[]]
    >>> m_b = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty


    >>> m_b = [[]]
    >>> m_a = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty


    >>> m_a = [[1, 2, 3], [4, "a", 6]]
    >>> m_b = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats


    >>> m_a = [[1, 2, 3], [4, True, 6]]
    >>> m_b = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats


    >>> m_b = [[1, 2, 3], [4, "a", 6]]
    >>> m_a = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats


    >>> m_b = [[1, 2, 3], [4, True, 6]]
    >>> m_a = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats


    >>> m_a = [[1, 2, 3], [4, 4, 6], [3, 2, 6]]
    >>> m_b = [[1, 2], [3, 2]]
    >>> matrix_mul(m_a, m_b)
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied


    >>> m_a = [[1, 2, 3], [3, 2, 1]]
    >>> m_b = [[1, 2, 3], [3, 2, 1], [1, 2, 3]]
    >>> matrix_mul(m_a, m_b)
    [[10, 12, 14], [10, 12, 14]]
