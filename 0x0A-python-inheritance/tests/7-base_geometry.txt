Module ``Base Geometry``
===============================================================================

Using ``BaseGeometry``
-------------------------------------------------------------------------------


    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


    >>> bg = BaseGeometry()


    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
        ...
    Exception: area() is not implemented


    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


    >>> bg = BaseGeometry()
    >>> bg.integer_validator(1, 1, 1)
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Integer", "Five")
    Traceback (most recent call last):
        ...
    TypeError: Integer must be an integer


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Integer", None)
    Traceback (most recent call last):
        ...
    TypeError: Integer must be an integer


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Integer", True)
    Traceback (most recent call last):
        ...
    TypeError: Integer must be an integer


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("List", [1, 3])
    Traceback (most recent call last):
        ...
    TypeError: List must be an integer


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Tuple", (1, 2))
    Traceback (most recent call last):
        ...
    TypeError: Tuple must be an integer


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Dictionary", {"key": 1})
    Traceback (most recent call last):
        ...
    TypeError: Dictionary must be an integer


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Float", 5.0)
    Traceback (most recent call last):
        ...
    TypeError: Float must be an integer


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Negative", -1)
    Traceback (most recent call last):
        ...
    ValueError: Negative must be greater than 0


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Zero", 0)
    Traceback (most recent call last):
        ...
    ValueError: Zero must be greater than 0


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Integer", 5)


    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Float", 5.5)
    Traceback (most recent call last):
        ...
    TypeError: Float must be an integer
